{{- if .Values.jobs.good.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.jobs.good.name }}
  namespace: {{ .Values.namespace }}
spec:
  template:
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      containers:
      - name: kubectl-runner
        image: {{ .Values.images.cliTool }}
        command:
          - /bin/sh
          - -c
          - |
            # This 'here document' passes the PipelineRun YAML directly to oc.
            # It tells Tekton to start a new run of the '{{ .Values.pipeline.name }}' pipeline.
            oc create -f - <<EOF
            apiVersion: tekton.dev/v1
            kind: PipelineRun
            metadata:
              # generateName creates a unique name for each run (e.g., java-app-build-run-abc12).
              generateName: java-app-build-run-good-
              namespace: {{ .Values.namespace }}
            spec:
              taskRunTemplate:
                serviceAccountName: {{ .Values.serviceAccount.name }}
              pipelineRef:
                # This must match the name of your existing Tekton Pipeline.
                name: {{ .Values.pipeline.name }}
              # Parameters for the pipeline - using "good" git revision as requested
              params:
                - name: IMAGE_NAME
                  value: "{{ .Values.registry }}/{{ .Values.namespace }}/{{ .Values.application_name }}"
                - name: GIT_REPO
                  value: "{{ .Values.git_url }}"
                - name: GIT_REVISION
                  value: "{{ .Values.git_revision }}"
                - name: SUBDIRECTORY
                  value: "{{ .Values.git_subdirectory }}"
              # Required workspace for the pipeline
              workspaces:
                - name: {{ .Values.workspace.name }}
                  volumeClaimTemplate:
                    spec:
                      accessModes:
                        - ReadWriteOnce
                      resources:
                        requests:
                          storage: {{ .Values.workspace.storage }}
            EOF
      restartPolicy: OnFailure
{{- end }} 